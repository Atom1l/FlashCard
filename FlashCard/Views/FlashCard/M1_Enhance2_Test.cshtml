@{
    ViewData["Title"] = "Flash Card";
    var translations = new Dictionary<string, string>
    {
        { "Happy", "ดีใจ" },
        { "Sad", "เศร้า" },
        { "Angry", "โกรธ" },
        { "Scared", "กลัว" },
    };

    var answerAudioFiles = new Dictionary<string, string>
    {
        { "Happy", "/sounds/M1-Happy.mp3" },
        { "Sad", "/sounds/M1-Sad.mp3" },
        { "Angry", "/sounds/M1-Angry.mp3" },
        { "Scared", "/sounds/M1-Scared.mp3" }
    };
}

<div class="container home-bg flex-column">
    <img src="/pic/BG/Blank.png" class="background" />
    <a asp-action="M1_Enhance1" class="close-btn">
        <i class="fa-solid fa-xmark"></i>
    </a>

    @if (Model != null && Model.Imgbytes != null)
    {
        <div class="enhance-container">
            <div class="question-text noto-bold">เหตุการณ์นี้สื่อถึงอารมณ์แบบใด?</div>
            <img src="data:image/png;base64,@Convert.ToBase64String(Model.Imgbytes)" alt="Flashcard" class="flashcard" />
            <div class="choices">
                @foreach (var choice in translations.Values)
                {
                    <button class="choice-btn noto-bold" data-answer="@choice">@choice</button>
                }
            </div>
            <a class="next-btn" style="opacity: 0; pointer-events: none;">
                <i class="fa-solid fa-chevron-right"></i>
            </a>
        </div>

        <!-- Audio Elements -->
        <audio id="correct-sound" src="/sounds/correctsound.mp3"></audio>
        <audio id="wrong-sound" src="/sounds/wrongsound.mp3"></audio>
    }
    else
    {
        <p>No Image Available</p>
    }
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const choiceButtons = document.querySelectorAll(".choice-btn");
    const nextBtn = document.querySelector(".next-btn");
    const flashcard = document.querySelector(".flashcard");

    let answerAudio;

    const translations = {
        "Happy": "ดีใจ",
        "Sad": "เศร้า",
        "Angry": "โกรธ",
        "Scared": "กลัว"
    };

    function getAnswerAudioFile(answer) {
        const answerAudioFiles = {
            "Happy": "/sounds/M1-2/Happy-M1-3.mp3",
            "Sad": "/sounds/M1-2/Sad-M1-3.mp3",
            "Angry": "/sounds/M1-2/Angry-M1-3.mp3",
            "Scared": "/sounds/M1-2/Afraid-M1-3.mp3"
        };
        return answerAudioFiles[answer] || null;
    }

    let correctAnswer = translations["@Model.Answer"] || "@Model.Answer";
    let answerAudioFile = getAnswerAudioFile("@Model.Answer");

    const correctSound = document.getElementById("correct-sound");
    const wrongSound = document.getElementById("wrong-sound");

    choiceButtons.forEach(button => {
        button.addEventListener("click", function () {
            let userAnswer = this.getAttribute("data-answer");

            // เล่นเสียงของคำตอบที่ถูกต้อง
            answerAudio = new Audio(answerAudioFile);
            answerAudio.play();

            if (userAnswer === correctAnswer) {
                this.classList.add("correct");
                correctSound.play();
            } else {
                this.classList.add("wrong");
                wrongSound.play();

                choiceButtons.forEach(btn => {
                    if (btn.getAttribute("data-answer") === correctAnswer) {
                        btn.classList.add("correct");
                    }
                });
            }

            choiceButtons.forEach(btn => btn.disabled = true);
            nextBtn.style.opacity = "1";
            nextBtn.style.cursor = "pointer";
            nextBtn.style.pointerEvents = "auto";
        });
    });

    nextBtn.addEventListener("click", function () {

        if (typeof answerAudio !== "undefined") {
            answerAudio.pause();
            answerAudio.currentTime = 0;

            correctSound.pause();
            correctSound.currentTime = 0;

            wrongSound.pause();
            wrongSound.currentTime = 0;
        }

        const moduleValue = 1;
        const submoduleValue = 2;

        const url = `@Url.Action("GetNextFlashCard", "Flashcard")?module=${moduleValue}&submodule=${submoduleValue}`;

        fetch(url, { method: 'GET' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    flashcard.src = "data:image/png;base64," + data.imgBytes;
                    correctAnswer = translations[data.correctAnswer.trim()] || data.correctAnswer.trim();
                    answerAudioFile = getAnswerAudioFile(data.correctAnswer.trim());

                    choiceButtons.forEach(button => {
                        button.classList.remove("correct", "wrong");
                        button.disabled = false;
                    });

                    nextBtn.style.opacity = "0";
                    nextBtn.style.pointerEvents = "none";
                } else {
                    const source = encodeURIComponent("M1_Enhance2");
                    const next = encodeURIComponent("M1_Conclude");
                    window.location.href = `@Url.Action("M1_Done")?source=${source}&next=${next}`;
                }
            })
            .catch(error => console.error('Error:', error));
    });
});
</script>
