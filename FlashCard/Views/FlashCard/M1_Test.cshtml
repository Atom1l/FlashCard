@{
    ViewData["Title"] = "Flash Card";
    var translations = new Dictionary<string, string>
    {
        { "Happy", "ดีใจ" },
        { "Sad", "เศร้า" },
        { "Angry", "โกรธ" },
        { "Scared", "กลัว" },
    };
}

<div class="container home-bg flex-column">
    <img src="/pic/BG/Blank.png" class="background" />
    <a asp-action="M1_Enhance1" class="close-btn">
        <i class="fa-solid fa-xmark"></i>
    </a>

    @if (Model != null && Model.Imgbytes != null)
    {
        <div class="enhance-container">
            @if (Model.SubModule == "1")
            {
                <div class="question-text noto-bold">รูปนี้สื่ออารมณ์อะไร?</div>
            }
            else if (Model.SubModule == "2")
            {
                <div class="question-text noto-bold">เหตุการณ์นี้สื่อถึงอารมณ์แบบใด?</div>
            }
            <img src="data:image/png;base64,@Convert.ToBase64String(Model.Imgbytes)" alt="Flashcard" class="flashcard" />
            <div class="choices">
                @foreach (var choice in translations.Values)
                {
                    <button class="choice-btn noto-bold" data-answer="@choice">@choice</button>
                }
            </div>
            <a class="next-btn" style="opacity: 0; pointer-events: none;">
                <i class="fa-solid fa-chevron-right"></i>
            </a>
        </div>
    }
    else
    {
        <p>No Image Available</p>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const choiceButtons = document.querySelectorAll(".choice-btn");
        const nextBtn = document.querySelector(".next-btn");
        const flashcard = document.querySelector(".flashcard");
        const questionText = document.querySelector(".question-text");

        const translations = {
            "Happy": "ดีใจ",
            "Sad": "เศร้า",
            "Angry": "โกรธ",
            "Scared": "กลัว"
        };

        let correctAnswer = translations["@Model.Answer"] || "@Model.Answer";
        let subModule = "@Model.SubModule".trim();
        let score = 0;

        function updateQuestionText(subModule) {
            if (subModule === "1") {
                questionText.textContent = "รูปนี้สื่อถึงอารมณ์อะไร?";
            } else if (subModule === "2") {
                questionText.textContent = "เหตุการณ์นี้สื่อถึงอารมณ์แบบใด?";
            }
        }

        function updateChoices(correctKey) {
            choiceButtons.forEach((button, index) => {
                let key = Object.keys(translations)[index];
                button.textContent = translations[key];
                button.setAttribute("data-answer", translations[key]);
                button.classList.remove("blue-bg");
                button.disabled = false;
            });
        }

        choiceButtons.forEach(button => {
            button.addEventListener("click", function () {
                let userAnswer = this.getAttribute("data-answer");

                this.classList.add("blue-bg");
                if (userAnswer === correctAnswer) {
                    score++;
                }

                choiceButtons.forEach(btn => btn.disabled = true);
                nextBtn.style.opacity = "1";
                nextBtn.style.cursor = "pointer";
                nextBtn.style.pointerEvents = "auto";
            });
        });

        nextBtn.addEventListener("click", function () {
            const moduleValue = 1;
            const url = `@Url.Action("GetNextFlashCard_Test", "Flashcard")?module=${moduleValue}`;

            fetch(url, { method: 'GET' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    flashcard.src = "data:image/png;base64," + data.imgBytes;
                    correctAnswer = translations[data.correctAnswer.trim()] || data.correctAnswer.trim();
                    subModule = data.subModule.trim();

                    updateQuestionText(subModule);
                    updateChoices(correctAnswer);

                    nextBtn.style.opacity = "0";
                    nextBtn.style.pointerEvents = "none";
                } else {
                    const module = encodeURIComponent("M1");
                    window.location.href = `@Url.Action("M1_Test_Done", "Flashcard")?score=${score}&module=${module}`;
                }
            })
            .catch(error => console.error('Error:', error));
        });

        updateQuestionText(subModule);
    });

</script>