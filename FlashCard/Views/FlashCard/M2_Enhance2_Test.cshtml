@{
    ViewData["Title"] = "Flash Card";
    var translations = new Dictionary<string, string>
    {
        { "AskQ", "ขออนุญาตถาม" },
        { "Yes", "ใช่" },
        { "No", "ไม่" },
    };

    var answerAudioFiles = new Dictionary<string, string>
    {
        { "AskQ", "/sounds/M1-Happy.mp3" },
        { "Yes", "/sounds/M1-Sad.mp3" },
        { "NO", "/sounds/M1-Angry.mp3" },
    };
}

<div class="container home-bg flex-column">
    <img src="/pic/BG/Blank.png" class="background" />
    <a asp-action="M2_Enhance2" class="close-btn">
        <i class="fa-solid fa-xmark"></i>
    </a>
    
    @if (Model != null && Model.Imgbytes != null)
    {
        <div class="enhance-container">
            <div class="question-text noto-bold">คนในภาพต้องการแสดงออกอย่างไร?</div>
            <img src="data:image/png;base64,@Convert.ToBase64String(Model.Imgbytes)" alt="Flashcard" class="flashcard" />
            <div class="m2-choices">
                @foreach (var choice in translations.Values)
                {
                    <button class="choice-btn noto-bold" data-answer="@choice">@choice</button>
                }
            </div>
            <a class="next-btn" style="opacity: 0; pointer-events: none;">
                <i class="fa-solid fa-chevron-right"></i>
            </a>
        </div>

        <!-- Audio Elements -->
        <audio id="correct-sound" src="/sounds/correctsound.mp3"></audio>
        <audio id="wrong-sound" src="/sounds/wrongsound.mp3"></audio>
    }
    else
    {
        <p>No Image Available</p>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const choiceButtons = document.querySelectorAll(".choice-btn");
        const nextBtn = document.querySelector(".next-btn");
        const flashcard = document.querySelector(".flashcard");

        const translations = {
            "AskQ": "ขออนุญาตถาม",
            "Yes": "ใช่",
            "No": "ไม่"
        };

        // ฟังก์ชันโหลดเสียงของคำตอบที่ถูกต้อง (อัปเดตค่าใหม่)
        function getAnswerAudioFile(answer) {
            const answerAudioFiles = {
                "AskQ": "/sounds/M1-Happy.mp3",
                "Yes": "/sounds/M1-Sad.mp3",
                "No": "/sounds/M1-Angry.mp3",
            };
            return answerAudioFiles[answer] || null;
        }

        let correctAnswer = translations["@Model.Answer"] || "@Model.Answer";
        let answerAudioFile = getAnswerAudioFile("@Model.Answer");

        const correctSound = document.getElementById("correct-sound");
        const wrongSound = document.getElementById("wrong-sound");

        choiceButtons.forEach(button => {
            button.addEventListener("click", function () {
                let userAnswer = this.getAttribute("data-answer");

                // เล่นเสียงของคำตอบที่ถูกต้อง (โหลดใหม่ทุกครั้ง)
                let answerAudio = new Audio(answerAudioFile);
                answerAudio.play();

                if (userAnswer === correctAnswer) {
                    this.classList.add("correct");
                    correctSound.play(); // เล่นเสียงเมื่อตอบถูกต้อง
                } else {
                    this.classList.add("wrong");
                    wrongSound.play(); // เล่นเสียงเมื่อตอบผิด

                    // แสดงตัวเลือกที่ถูกต้องเป็นสีเขียว
                    choiceButtons.forEach(btn => {
                        if (btn.getAttribute("data-answer") === correctAnswer) {
                            btn.classList.add("correct");
                        }
                    });
                }

                // ปิดการใช้งานปุ่มตัวเลือกทั้งหมด
                choiceButtons.forEach(btn => btn.disabled = true);

                // แสดงปุ่ม Next
                nextBtn.style.opacity = "1";
                nextBtn.style.cursor = "pointer";
                nextBtn.style.pointerEvents = "auto";
            });
        });

        nextBtn.addEventListener("click", function () {
            const moduleValue = 2;
            const submoduleValue = 2;

            const url = `@Url.Action("GetNextFlashCard", "Flashcard")?module=${moduleValue}&submodule=${submoduleValue}`;

            fetch(url, { method: 'GET' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    flashcard.src = "data:image/png;base64," + data.imgBytes;

                    // อัปเดตค่าใหม่ของคำตอบที่ถูกต้อง
                    correctAnswer = translations[data.correctAnswer.trim()] || data.correctAnswer.trim();

                    // โหลดเสียงใหม่ของโจทย์ที่เปลี่ยน
                    answerAudioFile = getAnswerAudioFile(data.correctAnswer.trim());

                    choiceButtons.forEach(button => {
                        button.classList.remove("correct", "wrong");
                        button.disabled = false;
                    });

                    nextBtn.style.opacity = "0";
                    nextBtn.style.pointerEvents = "none";
                } else {
                    const source = encodeURIComponent("M2_Enhance2");
                    const next = encodeURIComponent("M2_Conclude");
                    window.location.href = `@Url.Action("M2_Done")?source=${source}&next=${next}`;
                }
            })
            .catch(error => console.error('Error:', error));
        });
    });
</script>
