@{
    ViewData["Title"] = "Flash Card";
    var translations = new Dictionary<string, string>
    {
        { "Happy", "มีความสุข" },
        { "Sad", "เศร้า" },
        { "Angry", "โกรธ" },
        { "Scared", "กลัว" },
    };
}

<div class="container home-bg flex-column">
    <img src="/pic/BG/Blank.png" class="background" />
    <a asp-action="M1_Start1" class="close-btn">
        <i class="fa-solid fa-xmark"></i>
    </a>
    
    @if (Model != null && Model.Imgbytes != null)
    {
        <div class="flashcard-container">
            <a class="next-btn">
                <i class="fa-solid fa-chevron-right"></i>
            </a>

            <img tabindex="0" src="data:image/png;base64,@Convert.ToBase64String(Model.Imgbytes)" alt="Flashcard" class="" />

            @if (!string.IsNullOrEmpty(Model.Answer))
            {
                <div class="answer-container">
                    <p class="noto-bold answer-text">@(translations.ContainsKey(Model.Answer) ? translations[Model.Answer] : Model.Answer)</p>
                </div>
            }
        </div>
    }
    else
    {
        <p>No Image Available</p>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const flashcard = document.querySelector(".flashcard-container img");
        const nextBtn = document.querySelector(".next-btn");
        const answerContainer = document.querySelector(".answer-container");
        let hasShown = false; // ตัวแปรที่ใช้เก็บสถานะการแสดงของภาพ


        if (flashcard && nextBtn) {
            flashcard.addEventListener("click", function () {
                if (!hasShown) {
                    // ทำให้ปุ่ม Next ปรากฏ
                    nextBtn.style.opacity = "1";
                    nextBtn.style.cursor = "pointer";
                    nextBtn.style.pointerEvents = "auto";

                    // เปลี่ยนสถานะ HasShown เป็น true หลังจากที่คลิกที่ภาพ
                    hasShown = true;

                    // ไม่ให้ทำการ unfocus ที่รูปภาพ
                    flashcard.focus(); // ถ้าคุณต้องการให้รูปภาพได้รับ focus ตอนคลิก
                }
            });

            document.addEventListener("click", function (event) {
                // ซ่อนปุ่ม Next เมื่อคลิกที่อื่นนอกจากรูปภาพหรือปุ่ม
                if (!flashcard.contains(event.target) && !nextBtn.contains(event.target)) {
                    nextBtn.style.opacity = "0";
                    nextBtn.style.pointerEvents = "none";
                    hasShown = false; // รีเซ็ตสถานะ HasShown เมื่อ unfocus
                }
            });

            nextBtn.addEventListener("click", function () {
                if (hasShown) {
                    fetchNextFlashCard();
                }
            });
        }

            function fetchNextFlashCard() {
        fetch('@Url.Action("GetNextFlashCard")', {
            method: 'GET',
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const flashcardContainer = document.querySelector(".flashcard-container");
                const imgElement = flashcardContainer.querySelector("img");
                const answerElement = flashcardContainer.querySelector(".answer-text");

                imgElement.src = "data:image/png;base64," + data.imgBytes;

                if (answerElement) {
                    const translations = {
                        "Happy": "มีความสุข",
                        "Sad": "เศร้า",
                        "Angry": "โกรธ",
                        "Scared": "กลัว"
                    };
                    answerElement.textContent = translations[data.answer] || data.answer;
                }

                hasShown = false;
                nextBtn.style.opacity = "0";
                nextBtn.style.pointerEvents = "none";
            } else {
                // แก้ปัญหาการส่งค่าพารามิเตอร์ไม่ครบ
                const source = encodeURIComponent("M1_Start1");
                const next = encodeURIComponent("M1_Enhance1");

                window.location.href = `@Url.Action("M1_Done")?source=${source}&next=${next}`;
            }
        })
        .catch(error => {
            console.error('Error fetching next flashcard:', error);
        });
    }

    });

</script>
